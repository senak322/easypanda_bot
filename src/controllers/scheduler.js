import cron from "node-cron";
import Order from "../models/ExchangeOrder.js"; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ –º–æ–¥–µ–ª–∏ –≤–µ—Ä–Ω—ã–π
import { config } from "../../config.js";
import axios from "axios";
const { adminChatId, currencyRubUrl, currencyCnyUrl, currencyUahUrl } = config;

const checkExpiredOrders = async (bot) => {
  try {
    const now = new Date();
    const expiredOrders = await Order.find({
      status: "pending",
      expiresAt: { $lt: now },
    });

    expiredOrders.forEach(async (order) => {
      order.status = "cancelled";
      let messageText = `–í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É –∏—Å—Ç–µ–∫–ª–æ. –ó–∞—è–≤–∫–∞ #${order.hash} –æ—Ç–º–µ–Ω–µ–Ω–∞.`;
      await order.save();
      // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      // –ù–∞–ø—Ä–∏–º–µ—Ä, bot.telegram.sendMessage(...)
      bot.telegram.sendMessage(order.userId, messageText);
      bot.telegram.sendMessage(adminChatId, messageText, {
        parse_mode: "Markdown",
      });
    });
  } catch (error) {
    console.error("Error running cron job: ", error);
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
async function getCustomExchangeRates() {
  const rubCurr = await axios.get(currencyRubUrl);
  const uahCurr = await axios.get(currencyUahUrl);
  const cnyCurr = await axios.get(currencyCnyUrl);

  return {
    RUB_CNY: rubCurr.data.rub.cny * 1.07,
    UAH_CNY: uahCurr.data.uah.cny * 1.1,
    CNY_RUB: cnyCurr.data.cny.rub * 0.96,
    CNY_UAH: cnyCurr.data.cny.uah * 0.96,
    // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –ø–∞—Ä—ã –≤–∞–ª—é—Ç –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏
  };
}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –∏ –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç
async function sendGreetingAndRates(bot) {
  const greetings = [
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –•–æ—Ä–æ—à–µ–≥–æ –Ω–∞—á–∞–ª–∞ –¥–Ω—è!üéâ",
    "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ñ–µ–ª–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω—ã –¥–Ω—è!",
    "–î–æ–±—Ä–æ–π –Ω–æ—á–∏, –∂–µ–ª–∞–µ–º –∫—Ä–µ–ø–∫–æ–≥–æ —Å–Ω–∞!",
  ];

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Å –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω—É–∂–Ω–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
  const currentHour = new Date().getHours();
  const greetingIndex = currentHour < 12 ? 0 : currentHour < 18 ? 1 : 2;

  const rates = await getCustomExchangeRates();
  const ratesMessage = `RUBüá∑üá∫ -> CNYüá®üá≥ ${rates.RUB_CNY}\nUAHüá∫üá¶ -> CNYüá®üá≥ ${rates.UAH_CNY}\nCNYüá®üá≥ -> RUBüá∑üá∫ ${rates.CNY_RUB}\nCNYüá®üá≥ -> UAHüá∫üá¶ ${rates.CNY_UAH}\n`;

  const message = `${greetings[greetingIndex]}\n\nüöÄ–≠–∫—Å–ø—Ä–µ—Å—Å –æ–±–º–µ–Ω –≤–∞–ª—é—Çüí∏\n–ì–æ—Ä—è—á–∏–π –∫—É—Ä—Åüî•\n–ö—É—Ä—Å –Ω–∞ –º–æ–º–µ–Ω—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:\n${ratesMessage}\n\n–ü—Ä–æ–≤–µ—Ä—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤ –±–æ—Ç–µ, –ª–∏–±–æ –Ω–∞ —Å–∞–π—Ç–µ!\n...`;

  bot.telegram.sendMessage(config.adminChatId, message, {
    parse_mode: "Markdown",
    disable_web_page_preview: true,
  });
}

export const startCronJobs = (bot) => {
  // –ó–∞–¥–∞—á–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
  cron.schedule("* * * * *", () => checkExpiredOrders(bot));

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç —Ç—Ä–∏ —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å
  cron.schedule("0 11 * * *", () => sendGreetingAndRates(bot), {
    scheduled: true,
    timezone: "Europe/Moscow",
  });
  cron.schedule("0 15 * * *", () => sendGreetingAndRates(bot), {
    scheduled: true,
    timezone: "Europe/Moscow",
  });
  cron.schedule("0 21 * * *", () => sendGreetingAndRates(bot), {
    scheduled: true,
    timezone: "Europe/Moscow",
  });
};
